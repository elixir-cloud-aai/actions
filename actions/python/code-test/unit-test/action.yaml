---
name: Unit Test
description: Set up environment, run unit tests, and upload coverage report.

inputs:
  os:
    default: ubuntu-latest
    description: The operating system to use
    required: false
  python_version:
    default: "3.12"
    description: The version of Python to use
    required: false
  poetry_install_options:
    default: "--with=test"
    description: Options for installing dependencies via poetry
    required: false
  poetry_export_options:
    default: "--with=test"
    description: Options for exporting dependencies for cache invalidation
    required: false
  codecov_token:
    description: Codecov token for uploading coverage reports
    required: true
  file_path:
    description: The path to the file or directory to unit test
    required: false
    default: "tests/test_unit"

runs:
  using: composite
  steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up environment
      id: setup
      uses: elixir-cloud-aai/actions/python/setup/poetry@main
      with:
        os: ${{ inputs.os }}
        python_version: ${{ inputs.python_version }}
        poetry_install_options: ${{ inputs.poetry_install_options }}
        poetry_export_options: ${{ inputs.poetry_export_options }}

    - name: Comment on PR
      if: steps.setup.outcome == 'failure'
      uses: elixir-cloud-aai/actions/github/comment@main
      with:
        ci_name: unit-test
        step_name: setup
        commit_id: ${{ github.sha }}
        issue-number: ${{ github.event.number }}
        username: ${{ github.actor}}
        message: |
          Test depend on the main package dependecies and `test`
          group in `pyproject.toml`.
          
          <details>
          <summary>Env used for CI</summary>
            OS: ${{ inputs.os }}
            Python Version: ${{ inputs.python_version }}
            Poetry Install Options: ${{ inputs.poetry_install_options }}
            Poetry Export Options: ${{ inputs.poetry_export_options }}
          </details>

    - name: Run unit tests and generate coverage report
      id: unit-test
      shell: bash
      run: |
        poetry run pytest \
          --cov-report term \
          --cov-report xml:test_unit.xml \
          --cov=${{ inputs.file_path }}

    - name: Comment on PR
      if: steps.unit-test.outcome == 'failure'
      uses: elixir-cloud-aai/actions/github/comment@main
      with:
        ci_name: unit-test
        step_name: test
        commit_id: ${{ github.sha }}
        issue-number: ${{ github.event.number }}
        username: ${{ github.actor}}
        message: |
          Check your unit tests in ${{ inputs.file_path }},
          and the dependencies in `pyproject.toml`. 
          
          Run `poetry run pytest --cov=${{ inputs.file_path }}` to see the errors.

    - name: Upload coverage to Codecov
      id: upload
      uses: codecov/codecov-action@v4
      with:
        token: ${{ inputs.codecov_token }}
        flags: test_unit
        files: ./test_unit.xml
        fail_ci_if_error: false
        verbose: true

    - name: Comment on PR
      if: ${{ inputs.codecov_token }} == null || ${{ inputs.codecov_token }} == ''
      uses: elixir-cloud-aai/actions/github/comment@main
      with:
        ci_name: unit-test
        step_name: upload
        commit_id: ${{ github.sha }}
        issue-number: ${{ github.event.number }}
        username: ${{ github.actor}}
        message: |
          Codecov token is missing. Please ask admin to add the token to the 
          secrets. The coverage report was generated but not uploaded.
...
