---
name: Code Vulnerability Test
description: Set up environment, run code vulnerability checks, and report
  findings.

inputs:
  os:
    default: ubuntu-latest
    description: The operating system to use
    required: false
  python_version:
    default: '3.12'
    description: The version of Python to use
    required: false
  poetry_install_options:
    default: '--only=vulnerability --no-root'
    description: Options for installing dependencies via poetry
    required: false
  poetry_export_options:
    default: '--only=vulnerability'
    description: Options for exporting dependencies for cache invalidation
    required: false
  config_path:
    description: The path to the Bandit configuration file
    default: 'pyproject.toml'
    required: false
  file_path:
    description: The path to the file or directory to check for vulnerabilities
    required: true

runs:
  using: composite
  steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up environment
      uses: elixir-cloud-aai/actions/python/setup/poetry@main
      id: setup
      continue-on-error: false
      with:
        os: ${{ inputs.os }}
        python_version: ${{ inputs.python_version }}
        poetry_install_options: ${{ inputs.poetry_install_options }}
        poetry_export_options: ${{ inputs.poetry_export_options }}

    - name: Comment on PR
      if: steps.setup.outcome == 'failure'
      uses: elixir-cloud-aai/actions/github/comment@main
      with:
        ci_name: bandit
        step_name: setup
        commit_id: ${{ github.sha }}
        issue_number: ${{ github.event.number }}
        username: ${{ github.actor}}
        message: |
          Make sure bandit is in `vulnerability` group in `pyproject.toml`.

          <details>
          <summary>Env used for CI</summary>
            OS: ${{ inputs.os }}
            Python Version: ${{ inputs.python_version }}
            Poetry Install Options: ${{ inputs.poetry_install_options }}
            Poetry Export Options: ${{ inputs.poetry_export_options }}
          </details>

    - name: Check code vulnerabilities with Bandit
      id: check
      continue-on-error: true
      shell: bash
      run: poetry run bandit \
        -c ${{ inputs.config_path }} \
        -r ${{ inputs.file_path }}

    - name: Comment on PR
      if: steps.check.outcome == 'failure'
      uses: elixir-cloud-aai/actions/github/comment@main
      with:
        ci_name: bandit
        step_name: check
        commit_id: ${{ github.sha }}
        issue_number: ${{ github.event.number }}
        username: ${{ github.actor}}
        message: |
          Check your code for vulnerabilities using Bandit.

          Run `poetry run bandit -c ${{ inputs.config_path }} -r ${{ inputs.file_path }}` 
          to check for errors.

          <details>
          <summary>Ignore errors</summary>
            If you are sure that the error is a false positive, you can add the
            error code to the `skips` list in `pyproject.toml`.

            ```toml
            [tool.bandit]
            skips = [
              "B108"  # Insecure usage of temp file/directory, false positive.
            ]
            ```
          </details>
